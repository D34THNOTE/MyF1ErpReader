//------------------------------------------------
//--- 010 Editor v7.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
byte endianness;
if (endianness == 0x00)
{
    BigEndian();
}
else if (endianness == 0x01)
{
    LittleEndian();
}

char magic[4];
struct XmlElementInfo
{
    int16 elemLength;
    byte unk;
    byte pad;
    int16 attribCount;
};

struct XmlElement
{
    struct XmlElementInfo elemInfo <hidden=true>;

    if (elemInfo.unk == 0)
    {
        string name;
    
        struct XmlAttributes
        {
            string name;
            string value;
        } attributes[elemInfo.attribCount] <optimize=false>;

        while (1)
        {
            struct XmlElement children;
            if (children.elemInfo.unk == 5)
            {
                break;
            }
        }
    }
    else if (elemInfo.unk == 1)
    {
        string value;
    }
    else if (elemInfo.unk == 5)
    {
        // end of element
    }
} root;