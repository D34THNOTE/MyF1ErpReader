<Window x:Class="EgoPssgEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EgoPssgEditor"
        xmlns:eel_graphics="clr-namespace:EgoEngineLibrary.Graphics;assembly=EgoEngineLibrary"
        xmlns:vm="clr-namespace:EgoPssgEditor.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="{Binding DisplayName}" Height="600" Width="800"
        DataContext="{Binding Source={StaticResource MainVM}}">
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding Path=OpenCommand}"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding Path=SaveCommand}"></KeyBinding>
    </Window.InputBindings>
    <Window.Resources>
        <SolidColorBrush x:Key="imageTextBg" Color="White" Opacity="0.5"/>
    </Window.Resources>

    <DockPanel>
        <Menu x:Name="mainMenu" DockPanel.Dock="Top" IsMainMenu="True">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding Path=NewCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/image_add.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open" Command="{Binding Path=OpenCommand}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/folder_image.png"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Save">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/disk.png"/>
                    </MenuItem.Icon>
                    <MenuItem Header="Save As _Opened" Command="{Binding Path=SaveCommand}" InputGestureText="Ctrl+S"></MenuItem>
                    <MenuItem Header="Save As _Pssg" Command="{Binding Path=SavePssgCommand}"></MenuItem>
                    <MenuItem Header="Save As _Compressed" Command="{Binding Path=SaveCompressedCommand}"></MenuItem>
                    <MenuItem Header="Save As _Xml" Command="{Binding Path=SaveXmlCommand}"></MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Nodes">
                <MenuItem Header="_Export" Command="{Binding Path=NodesWorkspace.Export}" CommandParameter="{Binding ElementName=tvMain, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="_Import" Command="{Binding Path=NodesWorkspace.Import}" CommandParameter="{Binding ElementName=tvMain, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="E_xport Data" Command="{Binding Path=NodesWorkspace.ExportData}" CommandParameter="{Binding ElementName=tvMain, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="I_mport Data" Command="{Binding Path=NodesWorkspace.ImportData}" CommandParameter="{Binding ElementName=tvMain, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="Add _Node" Command="{Binding Path=NodesWorkspace.AddNode}" CommandParameter="{Binding ElementName=tvMain, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="_Remove Node" Command="{Binding Path=NodesWorkspace.RemoveNode}" CommandParameter="{Binding ElementName=tvMain, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="Add _Attribute" Command="{Binding Path=NodesWorkspace.AddAttribute}" CommandParameter="{Binding ElementName=tvMain, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="Rem_ove Attribute" Command="{Binding Path=NodesWorkspace.RemoveAttribute}" CommandParameter="{Binding ElementName=attributesDataGrid, Path=SelectedItem}"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Textures">
                <MenuItem Header="_Export" Command="{Binding Path=TexturesWorkspace.Export}" CommandParameter="{Binding ElementName=texListView, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="_Import" Command="{Binding Path=TexturesWorkspace.Import}" CommandParameter="{Binding ElementName=texListView, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="E_xport All" Command="{Binding Path=TexturesWorkspace.ExportTextures}"></MenuItem>
                <MenuItem Header="I_mport All" Command="{Binding Path=TexturesWorkspace.ImportTextures}"></MenuItem>
                <MenuItem Header="_Duplicate Texture" Command="{Binding Path=TexturesWorkspace.DuplicateTexture}" CommandParameter="{Binding ElementName=texListView, Path=SelectedItem}"></MenuItem>
                <MenuItem Header="_Remove Texture" Command="{Binding Path=TexturesWorkspace.RemoveTextureC}" CommandParameter="{Binding ElementName=texListView, Path=SelectedItem}"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Models">
                <MenuItem Header="_Export Car" Command="{Binding Path=ModelsWorkspace.Export}"></MenuItem>
                <MenuItem Header="_Import Grid Car" Command="{Binding Path=ModelsWorkspace.Import}"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Schema">
                <MenuItem Header="_Load" Command="{Binding Path=LoadSchema}"></MenuItem>
                <MenuItem Header="_Save" Command="{Binding Path=SaveSchema}"></MenuItem>
                <MenuItem Header="_Clear" Command="{Binding Path=ClearSchema}"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_Website" Name="websiteMenuItem" Click="websiteMenuItem_Click"></MenuItem>
            </MenuItem>
        </Menu>


        <TabControl SelectedIndex="{Binding SelectedTabIndex}">
            <TabItem Header="{Binding DisplayName}" DataContext="{Binding Path=NodesWorkspace}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="240" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <DockPanel>
                        <TreeView Name="tvMain" ItemsSource="{Binding Path=PssgNodes}">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                                    <TextBlock Text="{Binding Path=DisplayName}"/>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </DockPanel>
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition>
                                <RowDefinition.Style>
                                    <Style TargetType="{x:Type RowDefinition}">
                                        <Setter Property="Height" Value="*" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=tvMain, Path=SelectedItem.HasAttributes}" Value="False">
                                                <Setter Property="Height" Value="0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RowDefinition.Style>
                            </RowDefinition>
                            <RowDefinition>
                                <RowDefinition.Style>
                                    <Style TargetType="{x:Type RowDefinition}">
                                        <Setter Property="Height" Value="*" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=tvMain, Path=SelectedItem.IsDataNode}" Value="False">
                                                <Setter Property="Height" Value="0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RowDefinition.Style>
                            </RowDefinition>
                        </Grid.RowDefinitions>

                        <DockPanel>
                            <DataGrid Name="attributesDataGrid" ItemsSource="{Binding ElementName=tvMain, Path=SelectedItem.Attributes}" AutoGenerateColumns="False" CanUserResizeRows="False" CanUserDeleteRows="False" Background="Gray">
                                <DataGrid.RowHeaderStyle>
                                    <Style TargetType="{x:Type DataGridRowHeader}">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"></Setter>
                                        <Setter Property="BorderBrush" Value="Black"></Setter>
                                        <Setter Property="BorderThickness" Value="0 0 1 1"></Setter>
                                    </Style>
                                </DataGrid.RowHeaderStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Path=DisplayValue, ValidatesOnExceptions=True}"></DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.RowHeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item.DisplayName}"/>
                                    </DataTemplate>
                                </DataGrid.RowHeaderTemplate>
                            </DataGrid>
                        </DockPanel>
                        <DockPanel Grid.Row="2">
                            <TextBox Text="{Binding ElementName=tvMain, Path=SelectedItem.DisplayValue, Mode=OneWay}" 
                                     TextWrapping="Wrap" 
                                     AcceptsReturn="True" 
                                     IsReadOnly="True" 
                                     VerticalScrollBarVisibility="Auto"></TextBox>
                        </DockPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="{Binding DisplayName}" DataContext="{Binding Path=TexturesWorkspace}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="240" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <DockPanel>
                        <TextBox DockPanel.Dock="Top" Name="texSearchBox" Text="{Binding Path=FilterText, UpdateSourceTrigger=PropertyChanged}" TabIndex="1"></TextBox>
                        <ListView Name="texListView" ItemsSource="{Binding Path=Textures}" SelectionMode="Single" TabIndex="0">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=DisplayName}"></TextBlock>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </DockPanel>
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                    <DockPanel Grid.Column="2">
                        <DockPanel.Background>
                            <DrawingBrush Stretch="None" TileMode="Tile" Viewport="0,0,128,128" ViewportUnits="Absolute">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Geometry="M0,0 L128,0 128,128, 0,128Z" Brush="DarkGray"/>
                                        <GeometryDrawing Geometry="M0,64 L128,64 128,128, 64,128 64,0 0,0Z" Brush="LightGray"/>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </DockPanel.Background>
                        <Grid>
                            <Image Source="{Binding ElementName=texListView, Path=SelectedItem.Preview}" 
                               MaxWidth="{Binding ElementName=texListView, Path=SelectedItem.Width}" 
                               MaxHeight="{Binding ElementName=texListView, Path=SelectedItem.Height}"></Image>
                            <TextBlock Text="{Binding ElementName=texListView, Path=SelectedItem.PreviewError}" 
                                   Visibility="{Binding ElementName=texListView, Path=SelectedItem.PreviewErrorVisibility}"/>
                            <StackPanel VerticalAlignment="Bottom" Background="{StaticResource imageTextBg}">
                                <TextBlock Text="{Binding ElementName=texListView, Path=SelectedItem.TextureInfo}"
                                       Foreground="Black"></TextBlock>
                            </StackPanel>
                        </Grid>
                    </DockPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
